@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@model IEnumerable<OC_Express_Voitures.Models.VehicleIndexViewModel>


@{
    ViewData["Title"] = "Index";
}



<h1>Index</h1>


<form asp-action="Create" asp-controller="Vehicles" method="get">
    <button type="submit" class="btn btn-primary mt-2">Create new</button>
</form>

<table class="table">
    <thead>
        <tr>

            <th>
                @Html.DisplayNameFor(model => model.Vin)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Brand)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Model)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Finish)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Year)
            </th>            
            <th>
                @Html.DisplayNameFor(model => model.RetailPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            <th>
                @* Buttons *@
            </th>            
            </th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model)
        {            
            string statusClass = "bg-gradient text-light bg-";  

                switch (item.Status)
                {
                    case "Sold":
                        statusClass = statusClass + "secondary";
                    break;

                    case "Available soon":
                        statusClass = statusClass + "dark ";
                    break;

                    default:
                    statusClass = statusClass + "primary text-bold";
                        break;
                }
            

                <tr class="@statusClass">
                    <td>
                        @Html.DisplayFor(modelItem => item.Vin)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Brand)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Model)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Finish)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Year)
                    </td>             
                    <td>
                        @Html.DisplayFor(modelItem => item.RetailPrice)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    
                @if (SignInManager.IsSignedIn(User))
                {
                    <td >                   
                        <a asp-action="Edit" asp-route-id="@item.Id" class="@statusClass">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id" class="@statusClass">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id" class="@statusClass">Delete</a>                        
                    </td>  
                }
                else{
                    <td>
                <a asp-action="Details" asp-route-id="@item.Id" class="@statusClass">Details</a>
                    </td>
                }
                </tr>
        }
    </tbody>
</table>
