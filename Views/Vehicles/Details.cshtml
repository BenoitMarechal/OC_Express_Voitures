@model OC_Express_Voitures.Models.VehicleDetailsViewModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Details";   
    bool isLoggedIn = (SignInManager.IsSignedIn(User));
}


<h1>Details</h1>

<div>
    <h4>Vehicle</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Vin)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Vin)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Brand)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Brand)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Model)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Model)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Finish)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Finish)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Year)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Year)
        </dd> 
       
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.RepairsCount)
        </dt>

        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.RepairsCount)
        </dd>
        
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.RetailPrice)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.RetailPrice)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IsAvailable)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IsAvailable)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @if (!string.IsNullOrEmpty(Model.Description))
            {
                @Html.DisplayFor(model => model.Description)
            }
            else
            {
                <span class="fst-italic fw-lighter ">No description available</span>
            }
        </dd>



        @if (Model.Photo != null)
        {
             <img src="@Url.Action("GetPhoto", "Photos", new { id = Model.Photo.Id })" alt="Vehicle Photo" style="max-width: 450px; height: auto;" />
        }
        else
        {
            <span class="fst-italic fw-lighter ">No photo available</span>
        }

    </dl>
</div>
<div>   
    @if (isLoggedIn)
    {        
    <form asp-action="Edit" asp-controller="Vehicles" method="get" >
        <input type="hidden" name="id" value="@Model?.Id" />
        <button type="submit" class="btn btn-primary mt-2">Edit vehicle</button>
    </form>

    
    }
    <form asp-action="Index" asp-controller="Repairs" method="get">
        <input type="hidden" name="id" value="@Model?.Id" />
        <button type="submit" class="btn btn-primary mt-2">See repairs for this vehicle</button>
    </form>

    <div>
        <form asp-action="Index" asp-controller="Vehicles" method="get">
            <button type="submit" class="btn btn-primary mt-2">Back to list</button>
        </form>
    </div>
</div>
